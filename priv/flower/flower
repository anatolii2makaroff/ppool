#!/usr/bin/python
#
# Flow creater worker
#

import sys
import time
import json
import os
from Queue import Queue


# API


def read():
    line = sys.stdin.readline()
    return line.strip()


def log(m):
    sys.stderr.write("{}: {}\n".format(time.time(), m))
    sys.stderr.flush()


def send(m):
    sys.stdout.write("{}\n".format(m))
    sys.stdout.flush()


# Process - actor
#  line - recieve message from world
#  send - send message to world
#  log  -  logging anything


def get_command(p, args):

    # system::ping_pong::start
    # system::%local%::ping_pong::start

    node = None
    if len(args) == 4:
        node = args.pop(1)

    with open(p + args[1] + ".json") as f:
        d = json.loads(f.read())

        if args[2] == "start":
            _start = d["start_scene"]
        else:
            _start = args[2]

        _d = []
        for x in d["scenes"]:
            if x["name"] == _start:
                _d = x["cook"]
                break

        if node is None:
            return [x[1] for x in sorted([(x["num"], x["cmd"]) for x in _d])]

        else:
            return ["::".join([y
                               for y in ["system", node] + x[1].split("::")[2:]])
                    for x in sorted([(x["num"], x["cmd"]) for x in _d])]


def main(p):

    if not os.path.exists(p):
        os.makedirs(p)

    q = Queue()

    while 1:

        log("start working..")

        if q.empty():
            msg = read()

        else:
            msg = q.get(False)

        log("get message: " + msg)

        if msg.startswith("system::"):

            # system msg
            args = msg.split("::")

            if args[1] in ["error", "timeout"]:
                log("reciver error: " + msg)
                send("ok")

            else:
                for x in get_command(p, args):

                    log("send to api: " + x)

                    send(x)

                    # get respone
                    while 1:

                        msg = read()

                        if msg != "ok":
                            log("add to queue: " + msg)
                            q.put(msg)

                        else:
                            log("response from api: " + msg)
                            break


if __name__ == "__main__":
    main(sys.argv[1])
